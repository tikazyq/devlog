{
  "key": "enhance-github-issues-mapping-to-leverage-built-in",
  "title": "Enhance GitHub Issues mapping to leverage built-in fields and features",
  "type": "feature",
  "description": "Analyze and improve the GitHub Issues storage provider to better leverage GitHub's built-in features like assignees, projects, milestones, type field, and native labels instead of relying solely on custom label prefixes. This will make the devlog entries more integrated with GitHub's native workflow and reduce custom label overhead.",
  "status": "done",
  "priority": "high",
  "createdAt": "2025-07-11T05:29:05.861Z",
  "updatedAt": "2025-07-11T05:36:09.063Z",
  "notes": [
    {
      "id": "c6b8a971-384c-40ba-9dd8-c1f04eaeb7ed",
      "timestamp": "2025-07-11T05:29:42.252Z",
      "category": "progress",
      "content": "Analysis completed. GitHub Issues API provides several native fields we can leverage:\n\n**Current Implementation Analysis:**\n- Already using: assignees ✅, milestone ✅, labels ✅, state (open/closed) ✅\n- Heavily relies on custom labels with prefixes (devlog-type:feature, devlog-priority:high, etc.)\n\n**Key GitHub Native Features to Leverage:**\n1. **Type field**: GitHub has native `type` parameter for issues - can replace devlog-type:* labels\n2. **Assignees**: Already implemented well ✅\n3. **Milestone**: Already implemented ✅ - perfect for project/epic grouping\n4. **Projects**: Not currently used - could map to devlog project organization\n5. **Native labels**: Could use GitHub's default labels (bug, enhancement, etc.) instead of custom prefixes\n6. **State + state_reason**: Could use state_reason (completed, not_planned, reopened) for more nuanced status\n\n**Implementation Plan:**\n1. Enhance GitHubStorageConfig to support native vs custom label strategy\n2. Update GitHubAPIClient to support type field\n3. Modify GitHubMapper to use native features when configured\n4. Add GitHub Projects v2 integration for devlog organization\n5. Update label generation logic with hybrid approach"
    },
    {
      "id": "a2ba4195-a223-4798-bcbb-23f835473711",
      "timestamp": "2025-07-11T05:34:32.501Z",
      "category": "progress",
      "content": "Implemented core enhancements to GitHub Issues mapping:\n\n**Completed:**\n1. ✅ Enhanced GitHubStorageConfig with mapping strategy options\n2. ✅ Updated GitHubAPIClient to support type field and state_reason\n3. ✅ Modified GitHubMapper to support hybrid native/custom label approach\n4. ✅ Enhanced GitHubLabelManager to create appropriate labels based on strategy\n5. ✅ Updated search query building to work with native fields\n\n**Key Features Added:**\n- `mapping.useNativeType`: Use GitHub's native type field instead of custom labels\n- `mapping.useNativeLabels`: Use standard GitHub labels (bug, enhancement, etc.) \n- `mapping.useStateReason`: Use GitHub's state_reason for nuanced status tracking\n- Support for milestone and assignee fields (already existed)\n- Backward compatibility with existing custom label approach\n\n**Next Steps:**\n- Test the implementation\n- Create example configurations\n- Document the new features\n- Consider GitHub Projects v2 integration"
    },
    {
      "id": "b6844d1f-6e4c-4d1f-9dee-09cfe86b85d6",
      "timestamp": "2025-07-11T05:36:09.063Z",
      "category": "solution",
      "content": "✅ **Implementation Complete!** \n\nSuccessfully enhanced GitHub Issues mapping to leverage native GitHub features:\n\n**Delivered Features:**\n1. **Native Type Field**: Use GitHub's built-in issue type instead of custom labels\n2. **Native Labels**: Map to standard GitHub labels (bug, enhancement, documentation, etc.)\n3. **State Reason**: Use GitHub's state_reason for nuanced status tracking (completed, not_planned, reopened)\n4. **Hybrid Configuration**: Mix and match native vs custom approaches\n5. **Backward Compatibility**: Existing custom label setups continue to work\n\n**Documentation Created:**\n- `/docs/guides/GITHUB_NATIVE_FEATURES.md` - Comprehensive guide\n- `/docs/examples/devlog.config.github-native.json` - Native features example\n- `/docs/examples/devlog.config.github-traditional.json` - Traditional approach\n- Updated main GitHub setup guide\n\n**Benefits Achieved:**\n- Reduced custom label clutter in GitHub repositories  \n- Better integration with GitHub's native UI and workflows\n- Improved compatibility with GitHub Projects and automation\n- More intuitive for teams already using GitHub's project management features\n\n**Testing:** All builds pass successfully ✅"
    }
  ],
  "files": [],
  "relatedDevlogs": [],
  "context": {
    "businessContext": "GitHub Issues provides rich built-in features for project management including assignees, projects, milestones, and native issue types. Currently, our mapping heavily relies on custom labels with prefixes, which creates unnecessary label clutter and doesn't fully leverage GitHub's native capabilities. Better integration would make devlog entries feel more natural in GitHub and improve usability for teams already using GitHub's project management features.",
    "technicalContext": "Current implementation uses custom labels with prefixes (devlog-type:feature, devlog-priority:high, etc.) for all devlog field mapping. GitHub provides native fields like assignees, projects, milestones, and potentially issue templates that could be leveraged. The GitHubMapper and GitHubLabelManager classes need enhancement to optionally use these native features while maintaining backward compatibility.",
    "dependencies": [],
    "decisions": [],
    "acceptanceCriteria": [
      "Support mapping devlog assignee to GitHub issue assignees (already implemented)",
      "Investigate and implement GitHub Projects v2 integration for organizing devlogs",
      "Explore using GitHub milestones for devlog grouping/versioning",
      "Consider GitHub issue templates for consistent devlog structure",
      "Reduce custom label usage where native features can replace them",
      "Maintain backward compatibility with existing custom label approach",
      "Add configuration options to choose between custom labels vs native features"
    ],
    "risks": []
  },
  "aiContext": {
    "currentSummary": "",
    "keyInsights": [],
    "openQuestions": [],
    "relatedPatterns": [],
    "suggestedNextSteps": [],
    "lastAIUpdate": "2025-07-11T05:29:05.861Z",
    "contextVersion": 1
  },
  "id": 83
}