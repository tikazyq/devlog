name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint (if available)
        run: pnpm lint || echo "No lint script found"
        continue-on-error: true

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Check types
        run: pnpm --filter @devlog/types build

  build-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all packages
        run: pnpm build

      - name: Verify build artifacts
        run: |
          # Check that build artifacts exist
          [ -f "packages/mcp-server/build/index.js" ] || { echo "MCP server build failed"; exit 1; }
          [ -f "packages/types/build/index.js" ] || { echo "Types build failed"; exit 1; }
          [ -f "packages/types/build/index.d.ts" ] || { echo "Types declaration build failed"; exit 1; }
          echo "All build artifacts verified!"

      - name: Test package installation
        run: |
          # Test that packages can be packed
          cd packages/mcp-server && npm pack
          cd ../types && npm pack
