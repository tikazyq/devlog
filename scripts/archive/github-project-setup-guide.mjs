#!/usr/bin/env node

/**
 * GitHub Project Integration Setup Guide
 * 
 * This script provides step-by-step instructions for setting up
 * GitHub Projects integration with proper token permissions.
 */

console.log('üöÄ GitHub Project Integration Setup Guide');
console.log('==========================================\n');

console.log('üìã Current Status:');
console.log('  ‚úÖ GitHub Issues integration: WORKING');
console.log('  ‚ùå GitHub Projects integration: BLOCKED (missing token permissions)\n');

console.log('üîß Required Steps to Fix:');
console.log('\n1. Update GitHub Personal Access Token:');
console.log('   ‚Ä¢ Go to: https://github.com/settings/tokens');
console.log('   ‚Ä¢ Click "Edit" on your existing token, or create a new one');
console.log('   ‚Ä¢ Enable these scopes:');
console.log('     ‚úÖ repo (already working for issues)');
console.log('     üÜï project:read (to read project data)');
console.log('     üÜï project:write (to create/update project items)');
console.log('   ‚Ä¢ Click "Update token" or "Generate token"');
console.log('   ‚Ä¢ Copy the new token value\n');

console.log('2. Update devlog.config.json:');
console.log('   ‚Ä¢ Replace the token value with your new token');
console.log('   ‚Ä¢ Ensure projectNumber and projectId are correct\n');

console.log('3. Test the Integration:');
console.log('   ‚Ä¢ Run: node scripts/check-token-scopes.mjs');
console.log('   ‚Ä¢ Should show ‚úÖ for both repo and project scopes');
console.log('   ‚Ä¢ Should show ‚úÖ for project access test\n');

console.log('4. Sync Entries to GitHub Project:');
console.log('   ‚Ä¢ Run: node scripts/dogfood-github-project.mjs');
console.log('   ‚Ä¢ Or use MCP: mcp_devlog_find_or_create_devlog + sync methods\n');

console.log('üéØ What This Enables:');
console.log('  ‚Ä¢ Automatic project board updates');
console.log('  ‚Ä¢ Status tracking in GitHub Projects');
console.log('  ‚Ä¢ Visual kanban board workflow');
console.log('  ‚Ä¢ Team collaboration on devlog items');
console.log('  ‚Ä¢ Bidirectional sync capabilities\n');

console.log('üí° Architecture:');
console.log('  ‚Ä¢ Uses GitHub Projects V2 (GraphQL API)');
console.log('  ‚Ä¢ Creates draft issues in project boards');
console.log('  ‚Ä¢ Maps devlog status ‚Üí project status');
console.log('  ‚Ä¢ Maps devlog priority ‚Üí project priority');
console.log('  ‚Ä¢ Maintains references in devlog entries\n');

console.log('üîç Troubleshooting:');
console.log('  ‚Ä¢ If scopes still show "None visible" but work, that\'s normal');
console.log('  ‚Ä¢ Focus on the project access test results');
console.log('  ‚Ä¢ GraphQL errors indicate permission issues');
console.log('  ‚Ä¢ REST API success + GraphQL failure = missing project scope\n');

console.log('üìö Available Integration Methods:');
console.log('  ‚Ä¢ devlog.syncWithGitHubProject(id) - Core API');
console.log('  ‚Ä¢ mcp_devlog_* tools - MCP interface for AI');
console.log('  ‚Ä¢ scripts/dogfood-github-project.mjs - Manual testing\n');

console.log('üö¶ Ready to proceed? Run the token scope checker first!');
